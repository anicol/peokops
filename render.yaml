services:
  # Django API Backend
  - type: web
    name: verityinspect-api
    env: python
    rootDir: apps/api
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput --settings=verityinspect.settings
      python manage.py migrate --settings=verityinspect.settings
      python manage.py create_demo_users --settings=verityinspect.settings || echo "Demo users may already exist"
    startCommand: gunicorn verityinspect.wsgi:application --bind 0.0.0.0:$PORT --workers 2 --timeout 120
    plan: starter
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: ".onrender.com,verityinspect.com,*.verityinspect.com"
      - key: DATABASE_URL
        fromDatabase:
          name: verityinspect-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: verityinspect-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: verityinspect-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: verityinspect-redis
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_STORAGE_BUCKET_NAME
        value: verityinspect-media
      - key: AWS_S3_REGION_NAME
        value: us-east-1
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: MAX_VIDEO_SIZE_MB
        value: "100"
      - key: SUPPORTED_VIDEO_FORMATS
        value: "mp4,mov,avi"
      - key: INSPECTION_MODE_RETENTION_DAYS
        value: "365"
      - key: COACHING_MODE_RETENTION_DAYS
        value: "7"
      - key: ENABLE_AWS_REKOGNITION
        value: "True"
      - key: DEMO_MODE
        value: "True"
      - key: FACE_BLUR
        value: "False"
      - key: FRAME_SAMPLING_FPS
        value: "2.5"
      - key: MAX_FRAMES_PER_VIDEO
        value: "20"
    healthCheckPath: /health/
    healthCheckTimeout: 300

  # Celery Worker
  - type: worker
    name: verityinspect-celery
    env: python
    rootDir: apps/api
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A verityinspect worker -l info
    plan: starter
    envVars:
      - key: SECRET_KEY
        fromService:
          type: web
          name: verityinspect-api
          envVarKey: SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: verityinspect-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: verityinspect-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: verityinspect-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: verityinspect-redis
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        fromService:
          type: web
          name: verityinspect-api
          envVarKey: AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        fromService:
          type: web
          name: verityinspect-api
          envVarKey: AWS_SECRET_ACCESS_KEY
      - key: AWS_STORAGE_BUCKET_NAME
        value: verityinspect-media
      - key: AWS_S3_REGION_NAME
        value: us-east-1

  # React Web App
  - type: web
    name: verityinspect-web
    env: static
    buildCommand: |
      cd apps/web &&
      npm install &&
      npm run build
    staticPublishPath: ./apps/web/dist
    envVars:
      - key: VITE_API_URL
        value: https://verityinspect-api.onrender.com

  # Marketing Site
  - type: web
    name: verityinspect-marketing
    env: static
    buildCommand: |
      cd apps/marketing &&
      npm install &&
      npm run build
    staticPublishPath: ./apps/marketing/dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # Redis Cache/Queue
  - type: redis
    name: verityinspect-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []

databases:
  - name: verityinspect-db
    databaseName: verityinspect
    user: verityinspect_user
    plan: starter