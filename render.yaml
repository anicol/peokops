services:
  # Django API Backend
  - type: web
    name: peakops-api
    env: python
    rootDir: apps/api
    region: oregon
    buildCommand: |
      python3.11 -m pip install --upgrade pip --break-system-packages
      python3.11 -m pip install -r requirements.txt --break-system-packages
    startCommand: |
      python3.11 manage.py migrate --settings=peakops.settings --verbosity=2
      python3.11 manage.py collectstatic --noinput --settings=peakops.settings
      python3.11 manage.py create_demo_data --settings=peakops.settings || echo "Skipping demo data - may already exist"
      python3.11 manage.py check --settings=peakops.settings
      gunicorn peakops.wsgi:application --bind 0.0.0.0:$PORT --workers 2 --timeout 120
    plan: starter
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.9"
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: ".onrender.com,getpeakops.com,*.getpeakops.com"
      - key: DATABASE_URL
        fromDatabase:
          name: peakops-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_STORAGE_BUCKET_NAME
        value: peakops-media
      - key: AWS_S3_REGION_NAME
        value: us-east-1
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: MAX_VIDEO_SIZE_MB
        value: "100"
      - key: SUPPORTED_VIDEO_FORMATS
        value: "mp4,mov,avi"
      - key: INSPECTION_MODE_RETENTION_DAYS
        value: "365"
      - key: COACHING_MODE_RETENTION_DAYS
        value: "7"
      - key: ENABLE_AWS_REKOGNITION
        value: "True"
      - key: DEMO_MODE
        value: "True"
      - key: FACE_BLUR
        value: "False"
      - key: FRAME_SAMPLING_FPS
        value: "2.5"
      - key: MAX_FRAMES_PER_VIDEO
        value: "20"
      # Email/SES Configuration
      - key: USE_SES
        value: "True"
      - key: AWS_SES_REGION_NAME
        value: us-east-1
      - key: DEFAULT_FROM_EMAIL
        value: noreply@getpeakops.com
      - key: SERVER_EMAIL
        value: admin@getpeakops.com
    healthCheckPath: /health/

  # Celery Worker
  - type: worker
    name: peakops-celery
    env: python
    rootDir: apps/api
    buildCommand: |
      python3.11 -m pip install --upgrade pip --break-system-packages --quiet
      python3.11 -m pip install -r requirements.txt --break-system-packages --quiet
    startCommand: |
      echo "Starting Celery worker with dependency check..."
      
      # Quick dependency check and install if needed
      python3.11 -c "from decouple import config" 2>/dev/null || {
        echo "Installing missing dependencies..."
        python3.11 -m pip install python-decouple --break-system-packages --quiet
      }
      
      # Verify critical imports work
      python3.11 -c "from decouple import config; import django; import celery" || {
        echo "Installing requirements.txt..."
        python3.11 -m pip install -r requirements.txt --break-system-packages --quiet
      }
      
      echo "Starting Celery worker..."
      python3.11 -m celery -A peakops worker -l info
    plan: starter
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: peakops.settings
      - key: SECRET_KEY
        fromService:
          type: web
          name: peakops-api
          envVarKey: SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: peakops-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        fromService:
          type: web
          name: peakops-api
          envVarKey: AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        fromService:
          type: web
          name: peakops-api
          envVarKey: AWS_SECRET_ACCESS_KEY
      - key: AWS_STORAGE_BUCKET_NAME
        value: peakops-media
      - key: AWS_S3_REGION_NAME
        value: us-east-1

  # Celery Beat Scheduler
  - type: worker
    name: peakops-celery-beat
    env: python
    rootDir: apps/api
    buildCommand: |
      python3.11 -m pip install --upgrade pip --break-system-packages --quiet
      python3.11 -m pip install -r requirements.txt --break-system-packages --quiet
    startCommand: |
      echo "Starting Celery beat scheduler with dependency check..."
      
      # Quick dependency check and install if needed
      python3.11 -c "from decouple import config" 2>/dev/null || {
        echo "Installing missing dependencies..."
        python3.11 -m pip install python-decouple --break-system-packages --quiet
      }
      
      # Verify critical imports work
      python3.11 -c "from decouple import config; import django; import celery" || {
        echo "Installing requirements.txt..."
        python3.11 -m pip install -r requirements.txt --break-system-packages --quiet
      }
      
      echo "Starting Celery beat scheduler..."
      python3.11 -m celery -A peakops beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    plan: starter
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: peakops.settings
      - key: SECRET_KEY
        fromService:
          type: web
          name: peakops-api
          envVarKey: SECRET_KEY
      - key: DATABASE_URL
        fromDatabase:
          name: peakops-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: peakops-redis
          property: connectionString
      - key: AWS_ACCESS_KEY_ID
        fromService:
          type: web
          name: peakops-api
          envVarKey: AWS_ACCESS_KEY_ID
      - key: AWS_SECRET_ACCESS_KEY
        fromService:
          type: web
          name: peakops-api
          envVarKey: AWS_SECRET_ACCESS_KEY
      - key: AWS_STORAGE_BUCKET_NAME
        value: peakops-media
      - key: AWS_S3_REGION_NAME
        value: us-east-1

  # React Web App
  - type: web
    name: peakops-web
    env: static
    buildCommand: |
      cd apps/web &&
      npm install &&
      npm run build
    staticPublishPath: ./apps/web/dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_API_URL
        value: https://peakops-api.onrender.com

  # Marketing Site
  - type: web
    name: peakops-marketing
    env: static
    buildCommand: |
      cd apps/marketing &&
      npm install &&
      npm run build
    staticPublishPath: ./apps/marketing/dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # Redis Cache/Queue
  - type: redis
    name: peakops-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []

databases:
  - name: peakops-db
    databaseName: peakops
    user: peakops_user
    plan: Basic-256mb