name: Generate TypeScript API Client

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**/*.py'
      - 'apps/api/**/serializers.py'
      - 'apps/api/**/views.py'
      - 'apps/api/**/urls.py'
      - 'apps/api/verityinspect/settings.py'
  workflow_dispatch:

jobs:
  generate-client:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: verityinspect_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Python dependencies
      run: |
        cd apps/api
        pip install -r requirements.txt

    - name: Run Django migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/verityinspect_test
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key-for-github-actions
        DEBUG: 'True'
      run: |
        cd apps/api
        python manage.py migrate --settings=verityinspect.settings

    - name: Start Django server
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/verityinspect_test
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key-for-github-actions
        DEBUG: 'True'
      run: |
        cd apps/api
        python manage.py runserver --settings=verityinspect.settings &
        sleep 10
        curl -f http://localhost:8000/health/ || exit 1

    - name: Generate TypeScript client
      run: |
        node scripts/generate-client.js

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain apps/web/src/generated/)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit generated client
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add apps/web/src/generated/
        git commit -m "chore: update generated TypeScript API client

        ðŸ¤– Auto-generated from OpenAPI schema

        Co-Authored-By: GitHub Actions <action@github.com>"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create PR comment (if PR)
      if: github.event_name == 'pull_request' && steps.verify-changed-files.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ¤– **TypeScript API client updated**\n\nThe API schema changes in this PR have automatically generated updated TypeScript types and client methods. The generated files are now ready for use in the frontend application.\n\n**Generated files:**\n- `apps/web/src/generated/types.ts`\n- `apps/web/src/generated/client.ts`\n- `apps/web/src/generated/index.ts`'
          })