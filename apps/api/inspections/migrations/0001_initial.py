# Generated by Django 5.0 on 2025-09-23 21:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('videos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('INSPECTION', 'Inspection Mode'), ('COACHING', 'Coaching Mode')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('overall_score', models.FloatField(blank=True, help_text='Overall score 0-100', null=True)),
                ('ppe_score', models.FloatField(blank=True, null=True)),
                ('safety_score', models.FloatField(blank=True, null=True)),
                ('cleanliness_score', models.FloatField(blank=True, null=True)),
                ('uniform_score', models.FloatField(blank=True, null=True)),
                ('menu_board_score', models.FloatField(blank=True, null=True)),
                ('ai_analysis', models.JSONField(default=dict, help_text='Raw AI analysis results')),
                ('error_message', models.TextField(blank=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this inspection expires', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inspection', to='videos.video')),
            ],
            options={
                'db_table': 'inspections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('PPE', 'Personal Protective Equipment'), ('SAFETY', 'Safety'), ('CLEANLINESS', 'Cleanliness'), ('UNIFORM', 'Uniform Compliance'), ('MENU_BOARD', 'Menu Board'), ('OTHER', 'Other')], max_length=20)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('confidence', models.FloatField(help_text='AI confidence score 0-1')),
                ('bounding_box', models.JSONField(blank=True, help_text='Object detection coordinates', null=True)),
                ('recommended_action', models.TextField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('frame', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='videos.videoframe')),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='inspections.inspection')),
            ],
            options={
                'db_table': 'findings',
                'ordering': ['-severity', '-confidence', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('DISMISSED', 'Dismissed')], default='OPEN', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_actions', to=settings.AUTH_USER_MODEL)),
                ('finding', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inspections.finding')),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_items', to='inspections.inspection')),
            ],
            options={
                'db_table': 'action_items',
                'ordering': ['-priority', 'due_date', 'created_at'],
            },
        ),
    ]
