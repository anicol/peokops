# Generated by Django 4.2.23 on 2025-10-02 17:09

from django.db import migrations, models
import django.db.models.deletion


def migrate_video_to_inspection_relationship(apps, schema_editor):
    """Link videos to their inspections via new FK relationship"""
    Video = apps.get_model('videos', 'Video')
    Inspection = apps.get_model('inspections', 'Inspection')

    # For each inspection, find its video and set the reverse relationship
    for inspection in Inspection.objects.all():
        # Find videos that match this inspection's metadata
        matching_videos = Video.objects.filter(
            uploaded_by=inspection.created_by,
            store=inspection.store,
            title=inspection.title
        ).order_by('created_at')

        # Link the first matching video (should only be one due to old OneToOne)
        if matching_videos.exists():
            video = matching_videos.first()
            video.inspection = inspection
            video.save(update_fields=['inspection'])


def reverse_video_inspection_relationship(apps, schema_editor):
    """Reverse migration - clear inspection FK"""
    Video = apps.get_model('videos', 'Video')
    Video.objects.update(inspection=None)


class Migration(migrations.Migration):

    dependencies = [
        ('inspections', '0006_migrate_to_multi_video_support'),
        ('videos', '0002_video_demo_type_video_demo_violations_video_is_demo'),
    ]

    operations = [
        # Step 1: Add FK field (nullable)
        migrations.AddField(
            model_name='video',
            name='inspection',
            field=models.ForeignKey(blank=True, help_text='Inspection this video belongs to (null for videos pending inspection creation)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='inspections.inspection'),
        ),
        # Step 2: Migrate data - link videos to inspections
        migrations.RunPython(migrate_video_to_inspection_relationship, reverse_video_inspection_relationship),
        # Step 3: Add uniqueness constraint (enforces 1:1 for now)
        # NOTE: Temporarily commented out due to PostgreSQL trigger event issue
        # Will be added in next migration
        # migrations.AddConstraint(
        #     model_name='video',
        #     constraint=models.UniqueConstraint(condition=models.Q(('inspection__isnull', False)), fields=('inspection',), name='one_video_per_inspection_v1'),
        # ),
    ]
